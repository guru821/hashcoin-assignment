
!function(s){"use strict";Drupal.behaviors.healsecurity={attach:function(e,t){s(".news-event-secton .view-news-events .view-content").slick({slidesToShow:3,slidesToScroll:1,infinite:!1,centerPadding:"50px",autoplay:!1,autoplaySpeed:2e3,arrows:!0,prevArrow:"<button type='button' class='slick-prev pull-left'>Prev</button>",nextArrow:"<button type='button' class='slick-next pull-right'>Next</button>",responsive:[{breakpoint:768,settings:{slidesToShow:1}}]}),s(".logo-craousel").slick({slidesToShow:7,slidesToScroll:1,centerMode:!0,centerPadding:0,infinite:!0,arrows:!1,autoplay:!0,autoplaySpeed:2e3,responsive:[{breakpoint:768,settings:{slidesToShow:3}}]});var o=s(".scrollToTop");s(window).scroll(function(){100<s(this).scrollTop()?o.fadeIn():o.fadeOut()}),o.click(function(){return s("html, body").animate({scrollTop:0},800),!1})}}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb3Rlci9mb290ZXIuanMiLCJoZWFkZXIvaGVhZGVyLmpzIl0sIm5hbWVzIjpbIiQiLCJEcnVwYWwiLCJiZWhhdmlvcnMiLCJoZWFsc2VjdXJpdHkiLCJhdHRhY2giLCJjb250ZXh0Iiwic2V0dGluZ3MiLCJzbGljayIsInNsaWRlc1RvU2hvdyIsInNsaWRlc1RvU2Nyb2xsIiwiaW5maW5pdGUiLCJjZW50ZXJQYWRkaW5nIiwiYXV0b3BsYXkiLCJhdXRvcGxheVNwZWVkIiwiYXJyb3dzIiwicHJldkFycm93IiwibmV4dEFycm93IiwicmVzcG9uc2l2ZSIsImJyZWFrcG9pbnQiLCJjZW50ZXJNb2RlIiwiJHNjcm9sbFRvVG9wQnV0dG9uIiwid2luZG93Iiwic2Nyb2xsIiwidGhpcyIsInNjcm9sbFRvcCIsImZhZGVJbiIsImZhZGVPdXQiLCJjbGljayIsImFuaW1hdGUiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJBQUFBO0NDQUEsU0FBV0EsZ0JBK0RBQyxPQTdERkMsVUFBVUMsYUFBZSxDQUM5QkMsT0FBUSxTQUFVQyxFQUFTQyxHQUV6Qk4sRUFBRSxzREFBc0RPLE1BQU0sQ0FDNURDLGFBQWMsRUFDZEMsZUFBZ0IsRUFDaEJDLFVBQVUsRUFDVkMsY0FBZSxPQUNmQyxVQUFVLEVBQ1ZDLGNBQWUsSUFDZkMsUUFBUSxFQUNSQyxVQUNFLG1FQUNGQyxVQUNFLG9FQUNGQyxXQUFZLENBQ1YsQ0FDRUMsV0FBWSxJQUNaWixTQUFVLENBQ1JFLGFBQWMsT0FNdEJSLEVBQUUsa0JBQWtCTyxNQUFNLENBQ3hCQyxhQUFjLEVBQ2RDLGVBQWdCLEVBQ2hCVSxZQUFZLEVBQ1pSLGNBQWUsRUFDZkQsVUFBVSxFQUNWSSxRQUFRLEVBQ1JGLFVBQVUsRUFDVkMsY0FBZSxJQUNmSSxXQUFZLENBQ1YsQ0FDRUMsV0FBWSxJQUNaWixTQUFVLENBQ1JFLGFBQWMsT0FLdEIsSUFDSVksRUFBcUJwQixFQUFFLGdCQUUzQkEsRUFBRXFCLFFBQVFDLE9BQU8sV0FIRCxJQUlWdEIsRUFBRXVCLE1BQU1DLFlBQ1ZKLEVBQW1CSyxTQUVuQkwsRUFBbUJNLFlBS3ZCTixFQUFtQk8sTUFBTSxXQUV2QixPQURBM0IsRUFBRSxjQUFjNEIsUUFBUSxDQUFFSixVQUFXLEdBQUssTUFDbkMsTUEzRGYsQ0ErREdLIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIChmdW5jdGlvbiAoJCwgRHJ1cGFsLCBkcnVwYWxTZXR0aW5ncykge1xuLy8gICBcInVzZSBzdHJpY3RcIjtcbi8vICAgRHJ1cGFsLmJlaGF2aW9ycy5oZWFsc2VjdXJpdHkgPSB7XG4vLyAgICAgYXR0YWNoOiBmdW5jdGlvbiAoY29udGV4dCwgc2V0dGluZ3MpIHtcbi8vICAgICAgIC8vQ2xpY2sgZXZlbnQgdG8gc2Nyb2xsIHRvIHRvcFxuLy8gICAgICAgJHNjcm9sbFRvVG9wQnV0dG9uLmNsaWNrKGZ1bmN0aW9uICgpIHtcbi8vICAgICAgICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7IHNjcm9sbFRvcDogMCB9LCAxMDAwKTtcbi8vICAgICAgICAgcmV0dXJuIGZhbHNlO1xuLy8gICAgICAgfSk7XG4vLyAgICAgfSxcbi8vICAgfTtcbi8vIH0pKGpRdWVyeSwgRHJ1cGFsKTtcbiIsIihmdW5jdGlvbiAoJCwgRHJ1cGFsLCBkcnVwYWxTZXR0aW5ncykge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgRHJ1cGFsLmJlaGF2aW9ycy5oZWFsc2VjdXJpdHkgPSB7XG4gICAgYXR0YWNoOiBmdW5jdGlvbiAoY29udGV4dCwgc2V0dGluZ3MpIHtcbiAgICAgIC8vIEN1c3RvbSBjb2RlIHRvIGJlIHJ1biBvbiBwYWdlIGxvYWQgYW5kIG9uIEFqYXggbG9hZFxuICAgICAgJChcIi5uZXdzLWV2ZW50LXNlY3RvbiAudmlldy1uZXdzLWV2ZW50cyAudmlldy1jb250ZW50XCIpLnNsaWNrKHtcbiAgICAgICAgc2xpZGVzVG9TaG93OiAzLFxuICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcbiAgICAgICAgaW5maW5pdGU6IGZhbHNlLFxuICAgICAgICBjZW50ZXJQYWRkaW5nOiBcIjUwcHhcIixcbiAgICAgICAgYXV0b3BsYXk6IGZhbHNlLFxuICAgICAgICBhdXRvcGxheVNwZWVkOiAyMDAwLFxuICAgICAgICBhcnJvd3M6IHRydWUsXG4gICAgICAgIHByZXZBcnJvdzpcbiAgICAgICAgICBcIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0nc2xpY2stcHJldiBwdWxsLWxlZnQnPlByZXY8L2J1dHRvbj5cIixcbiAgICAgICAgbmV4dEFycm93OlxuICAgICAgICAgIFwiPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSdzbGljay1uZXh0IHB1bGwtcmlnaHQnPk5leHQ8L2J1dHRvbj5cIixcbiAgICAgICAgcmVzcG9uc2l2ZTogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGJyZWFrcG9pbnQ6IDc2OCxcbiAgICAgICAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgIH0pO1xuXG4gICAgICAkKFwiLmxvZ28tY3Jhb3VzZWxcIikuc2xpY2soe1xuICAgICAgICBzbGlkZXNUb1Nob3c6IDcsXG4gICAgICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxuICAgICAgICBjZW50ZXJNb2RlOiB0cnVlLFxuICAgICAgICBjZW50ZXJQYWRkaW5nOiAwLFxuICAgICAgICBpbmZpbml0ZTogdHJ1ZSxcbiAgICAgICAgYXJyb3dzOiBmYWxzZSxcbiAgICAgICAgYXV0b3BsYXk6IHRydWUsXG4gICAgICAgIGF1dG9wbGF5U3BlZWQ6IDIwMDAsXG4gICAgICAgIHJlc3BvbnNpdmU6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBicmVha3BvaW50OiA3NjgsXG4gICAgICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDMsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9KTtcbiAgICAgIHZhciBvZmZTZXRUb3AgPSAxMDA7XG4gICAgICB2YXIgJHNjcm9sbFRvVG9wQnV0dG9uID0gJChcIi5zY3JvbGxUb1RvcFwiKTtcbiAgICAgIC8vQ2hlY2sgdG8gc2VlIGlmIHRoZSB3aW5kb3cgaXMgdG9wIGlmIG5vdCB0aGVuIGRpc3BsYXkgYnV0dG9uXG4gICAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCQodGhpcykuc2Nyb2xsVG9wKCkgPiBvZmZTZXRUb3ApIHtcbiAgICAgICAgICAkc2Nyb2xsVG9Ub3BCdXR0b24uZmFkZUluKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJHNjcm9sbFRvVG9wQnV0dG9uLmZhZGVPdXQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIC8vQ2xpY2sgZXZlbnQgdG8gc2Nyb2xsIHRvIHRvcFxuICAgICAgJHNjcm9sbFRvVG9wQnV0dG9uLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7IHNjcm9sbFRvcDogMCB9LCA4MDApO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkoalF1ZXJ5LCBEcnVwYWwpO1xuIl19
